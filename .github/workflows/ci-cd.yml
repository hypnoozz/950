name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: gym_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      DB_CONNECTION: mysql
      DB_HOST: localhost
      DB_PORT: 3306
      DB_DATABASE: gym_db
      DB_USERNAME: root
      DB_PASSWORD: root123

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Wait for MySQL to be ready
      - name: Wait for MySQL
        run: |
          timeout 30s bash -c 'until mysqladmin ping -h localhost -u root -proot123 --silent; do sleep 1; done'

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      # Build the frontend project
      - name: Build frontend
        run: |
          cd frontend
          npm run build

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      # Run Django migrations
      - name: Run Django migrations
        run: |
          cd backend
          python manage.py migrate

      # Run backend tests
      - name: Run backend tests
        run: |
          cd backend
          python manage.py test --verbosity=2
        continue-on-error: true

      # Run frontend tests
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test -- --watchAll=false

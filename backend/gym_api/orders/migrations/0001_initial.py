# Generated by Django 3.2.11 on 2025-05-14 15:59

from django.db import migrations, models
import django.db.models.deletion
import uuid
from django.conf import settings

def create_membership_plans(apps, schema_editor):
    MembershipPlan = apps.get_model('orders', 'MembershipPlan')
    
    # 创建月度会员计划
    MembershipPlan.objects.create(
        name='Monthly Membership',
        description='Access to all courses for one month',
        price=99.00,
        duration_days=30,
        is_active=True
    )
    
    # 创建季度会员计划
    MembershipPlan.objects.create(
        name='Quarterly Membership',
        description='Access to all courses for three months',
        price=249.00,
        duration_days=90,
        is_active=True
    )
    
    # 创建年度会员计划
    MembershipPlan.objects.create(
        name='Annual Membership',
        description='Access to all courses for one year',
        price=899.00,
        duration_days=365,
        is_active=True
    )

def remove_membership_plans(apps, schema_editor):
    MembershipPlan = apps.get_model('orders', 'MembershipPlan')
    MembershipPlan.objects.all().delete()

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MembershipPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Plan Name')),
                ('description', models.TextField(verbose_name='Plan Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('duration_days', models.IntegerField(verbose_name='Duration (days)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Membership Plan',
                'verbose_name_plural': 'Membership Plans',
                'db_table': 'gym_membership_plan',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Order Number')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal')], max_length=20, verbose_name='Payment Method')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'gym_order',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('course', 'Course'), ('membership', 'Membership')], max_length=20, verbose_name='Item Type')),
                ('item_id', models.IntegerField(verbose_name='Item ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'gym_order_item',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='orders.membershipplan', verbose_name='Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Memberships',
                'db_table': 'gym_membership',
            },
        ),
        # Add initial data
        migrations.RunPython(create_membership_plans, remove_membership_plans),
    ]
